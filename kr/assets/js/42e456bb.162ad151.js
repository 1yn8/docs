"use strict";(self.webpackChunkk_3_s_docs=self.webpackChunkk_3_s_docs||[]).push([[9654],{7974:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(5893),a=t(1151);const i={title:"Air-Gap Install",weight:60},s=void 0,o={id:"installation/airgap",title:"Air-Gap Install",description:"You can install K3s in an air-gapped environment using two different methods. An air-gapped environment is any environment that is not directly connected to the Internet. You can either deploy a private registry and mirror docker.io, or you can manually deploy images such as for small clusters.",source:"@site/i18n/kr/docusaurus-plugin-content-docs/current/installation/airgap.md",sourceDirName:"installation",slug:"/installation/airgap",permalink:"/kr/installation/airgap",draft:!1,unlisted:!1,editUrl:"https://github.com/k3s-io/docs/edit/main/docs/installation/airgap.md",tags:[],version:"current",lastUpdatedAt:1701376380,formattedLastUpdatedAt:"Nov 30, 2023",frontMatter:{title:"Air-Gap Install",weight:60},sidebar:"mySidebar",previous:{title:"Private Registry Configuration",permalink:"/kr/installation/private-registry"},next:{title:"Managing Server Roles",permalink:"/kr/installation/server-roles"}},l={},d=[{value:"Private Registry Method",id:"private-registry-method",level:2},{value:"Create the Registry YAML",id:"create-the-registry-yaml",level:3},{value:"Manually Deploy Images Method",id:"manually-deploy-images-method",level:2},{value:"Prepare the Images Directory and K3s Binary",id:"prepare-the-images-directory-and-k3s-binary",level:3},{value:"Install K3s",id:"install-k3s",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installing K3s in an Air-Gapped Environment",id:"installing-k3s-in-an-air-gapped-environment",level:3},{value:"Upgrading",id:"upgrading",level:2},{value:"Install Script Method",id:"install-script-method",level:3},{value:"Automated Upgrades Method",id:"automated-upgrades-method",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components},{TabItem:t,Tabs:i}=n;return t||p("TabItem",!0),i||p("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"You can install K3s in an air-gapped environment using two different methods. An air-gapped environment is any environment that is not directly connected to the Internet. You can either deploy a private registry and mirror docker.io, or you can manually deploy images such as for small clusters."}),"\n",(0,r.jsx)(n.h2,{id:"private-registry-method",children:"Private Registry Method"}),"\n",(0,r.jsx)(n.p,{children:"This document assumes you have already created your nodes in your air-gap environment and have a Docker private registry on your bastion host."}),"\n",(0,r.jsxs)(n.p,{children:["If you have not yet set up a private Docker registry, refer to the official documentation ",(0,r.jsx)(n.a,{href:"https://docs.docker.com/registry/deploying/#run-an-externally-accessible-registry",children:"here"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"create-the-registry-yaml",children:"Create the Registry YAML"}),"\n",(0,r.jsxs)(n.p,{children:["Follow the ",(0,r.jsx)(n.a,{href:"/kr/installation/private-registry",children:"Private Registry Configuration"})," guide to create and configure the registry.yaml file."]}),"\n",(0,r.jsxs)(n.p,{children:["Once you have completed this, you may now go to the ",(0,r.jsx)(n.a,{href:"#install-k3s",children:"Install K3s"})," section below."]}),"\n",(0,r.jsx)(n.h2,{id:"manually-deploy-images-method",children:"Manually Deploy Images Method"}),"\n",(0,r.jsx)(n.p,{children:"We are assuming you have created your nodes in your air-gap environment.\nThis method requires you to manually deploy the necessary images to each node and is appropriate for edge deployments where running a private registry is not practical."}),"\n",(0,r.jsx)(n.h3,{id:"prepare-the-images-directory-and-k3s-binary",children:"Prepare the Images Directory and K3s Binary"}),"\n",(0,r.jsxs)(n.p,{children:["Obtain the images tar file for your architecture from the ",(0,r.jsx)(n.a,{href:"https://github.com/k3s-io/k3s/releases",children:"releases"})," page for the version of K3s you will be running."]}),"\n",(0,r.jsxs)(n.p,{children:["Place the tar file in the ",(0,r.jsx)(n.code,{children:"images"})," directory, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /var/lib/rancher/k3s/agent/images/\nsudo cp ./k3s-airgap-images-$ARCH.tar /var/lib/rancher/k3s/agent/images/\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once you have completed this, you may now go to the ",(0,r.jsx)(n.a,{href:"#install-k3s",children:"Install K3s"})," section below."]}),"\n",(0,r.jsx)(n.h2,{id:"install-k3s",children:"Install K3s"}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Before installing K3s, complete the ",(0,r.jsx)(n.a,{href:"#private-registry-method",children:"Private Registry Method"})," or the ",(0,r.jsx)(n.a,{href:"#manually-deploy-images-method",children:"Manually Deploy Images Method"})," above to prepopulate the images that K3s needs to install."]}),"\n",(0,r.jsxs)(n.li,{children:["Download the K3s binary from the ",(0,r.jsx)(n.a,{href:"https://github.com/k3s-io/k3s/releases",children:"releases"})," page, matching the same version used to get the airgap images. Place the binary in ",(0,r.jsx)(n.code,{children:"/usr/local/bin"})," on each air-gapped node and ensure it is executable."]}),"\n",(0,r.jsxs)(n.li,{children:["Download the K3s install script at ",(0,r.jsx)(n.a,{href:"https://get.k3s.io",children:"get.k3s.io"}),". Place the install script anywhere on each air-gapped node, and name it ",(0,r.jsx)(n.code,{children:"install.sh"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"K3s requires a default route in order to auto-detect the node's primary IP, and for kube-proxy ClusterIP routing to function properly. Therefore, a default route must be configured on each node, even if that route is a dummy route or a black hole."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["When running the K3s script with the ",(0,r.jsx)(n.code,{children:"INSTALL_K3S_SKIP_DOWNLOAD"})," environment variable, K3s will use the local version of the script and binary."]}),"\n",(0,r.jsx)(n.h3,{id:"installing-k3s-in-an-air-gapped-environment",children:"Installing K3s in an Air-Gapped Environment"}),"\n",(0,r.jsx)(n.p,{children:"You can install K3s on one or more servers as described below."}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsxs)(t,{value:"Single Server Configuration",default:!0,children:[(0,r.jsx)(n.p,{children:"To install K3s on a single server, simply do the following on the server node:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"INSTALL_K3S_SKIP_DOWNLOAD=true ./install.sh\n"})}),(0,r.jsx)(n.p,{children:"To add additional agents, do the following on each agent node:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"INSTALL_K3S_SKIP_DOWNLOAD=true K3S_URL=https://<SERVER_IP>:6443 K3S_TOKEN=<YOUR_TOKEN> ./install.sh\n"})}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The token from the server is typically found at ",(0,r.jsx)(n.code,{children:"/var/lib/rancher/k3s/server/token"}),"."]})})]}),(0,r.jsxs)(t,{value:"High Availability Configuration",default:!0,children:[(0,r.jsxs)(n.p,{children:["Reference the ",(0,r.jsx)(n.a,{href:"/kr/datastore/ha",children:"High Availability with an External DB"})," or ",(0,r.jsx)(n.a,{href:"/kr/datastore/ha-embedded",children:"High Availability with Embedded DB"})," guides. You will be tweaking install commands so you specify ",(0,r.jsx)(n.code,{children:"INSTALL_K3S_SKIP_DOWNLOAD=true"})," and run your install script locally instead of via curl. You will also utilize ",(0,r.jsx)(n.code,{children:"INSTALL_K3S_EXEC='args'"})," to supply any arguments to k3s."]}),(0,r.jsx)(n.p,{children:"For example, step two of the High Availability with an External DB guide mentions the following:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -sfL https://get.k3s.io | sh -s - server \\\n  --token=SECRET \\\n  --datastore-endpoint="mysql://username:password@tcp(hostname:3306)/database-name"\n'})}),(0,r.jsx)(n.p,{children:"Instead, you would modify such examples like below:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"INSTALL_K3S_SKIP_DOWNLOAD=true INSTALL_K3S_EXEC='server --token=SECRET' \\\nK3S_DATASTORE_ENDPOINT='mysql://username:password@tcp(hostname:3306)/database-name' \\\n./install.sh\n"})})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["K3s additionally provides a ",(0,r.jsx)(n.code,{children:"--resolv-conf"})," flag for kubelets, which may help with configuring DNS in air-gap networks."]})}),"\n",(0,r.jsx)(n.h2,{id:"upgrading",children:"Upgrading"}),"\n",(0,r.jsx)(n.h3,{id:"install-script-method",children:"Install Script Method"}),"\n",(0,r.jsx)(n.p,{children:"Upgrading an air-gap environment can be accomplished in the following manner:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Download the new air-gap images (tar file) from the ",(0,r.jsx)(n.a,{href:"https://github.com/k3s-io/k3s/releases",children:"releases"})," page for the version of K3s you will be upgrading to. Place the tar in the ",(0,r.jsx)(n.code,{children:"/var/lib/rancher/k3s/agent/images/"})," directory on each\nnode. Delete the old tar file."]}),"\n",(0,r.jsxs)(n.li,{children:["Copy and replace the old K3s binary in ",(0,r.jsx)(n.code,{children:"/usr/local/bin"})," on each node. Copy over the install script at ",(0,r.jsx)(n.a,{href:"https://get.k3s.io",children:"https://get.k3s.io"})," (as it is possible it has changed since the last release). Run the script again just as you had done in the past\nwith the same environment variables."]}),"\n",(0,r.jsx)(n.li,{children:"Restart the K3s service (if not restarted automatically by installer)."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"automated-upgrades-method",children:"Automated Upgrades Method"}),"\n",(0,r.jsxs)(n.p,{children:["K3s supports ",(0,r.jsx)(n.a,{href:"/kr/upgrades/automated",children:"automated upgrades"}),". To enable this in air-gapped environments, you must ensure the required images are available in your private registry."]}),"\n",(0,r.jsxs)(n.p,{children:["You will need the version of rancher/k3s-upgrade that corresponds to the version of K3s you intend to upgrade to. Note, the image tag replaces the ",(0,r.jsx)(n.code,{children:"+"})," in the K3s release with a ",(0,r.jsx)(n.code,{children:"-"})," because Docker images do not support ",(0,r.jsx)(n.code,{children:"+"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You will also need the versions of system-upgrade-controller and kubectl that are specified in the system-upgrade-controller manifest YAML that you will deploy. Check for the latest release of the system-upgrade-controller ",(0,r.jsx)(n.a,{href:"https://github.com/rancher/system-upgrade-controller/releases/latest",children:"here"})," and download the system-upgrade-controller.yaml to determine the versions you need to push to your private registry. For example, in release v0.4.0 of the system-upgrade-controller, these images are specified in the manifest YAML:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rancher/system-upgrade-controller:v0.4.0\nrancher/kubectl:v0.17.0\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once you have added the necessary rancher/k3s-upgrade, rancher/system-upgrade-controller, and rancher/kubectl images to your private registry, follow the ",(0,r.jsx)(n.a,{href:"/kr/upgrades/automated",children:"automated upgrades"})," guide."]})]})}function c(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>s});var r=t(7294);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);